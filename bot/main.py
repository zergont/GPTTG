"""–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
import asyncio

from aiogram import Bot, Dispatcher
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

from bot.config import settings, VERSION
from bot.middlewares import StartupMiddleware, UserMiddleware, ErrorMiddleware
from bot import router
from bot.utils.log import logger
from bot.utils.http_client import close_session


def ensure_single_instance_safe():
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Å fallback."""
    try:
        from bot.utils.single_instance import ensure_single_instance
        return ensure_single_instance("gpttg-bot.lock")
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —ç–∫–∑–µ–º–ø–ª—è—Ä–∞: {e}")
        logger.info("üîÑ –ü—Ä–æ–¥–æ–ª–∂–∞—é –∑–∞–ø—É—Å–∫ –±–µ–∑ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏...")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º dummy context manager
        from contextlib import nullcontext
        return nullcontext()


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    from bot.utils.db import init_db
    await init_db()

    bot = Bot(
        token=settings.bot_token,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )

    dp = Dispatcher()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º middleware
    dp.message.middleware(StartupMiddleware())
    dp.message.middleware(UserMiddleware())
    dp.message.middleware(ErrorMiddleware())
    dp.callback_query.middleware(StartupMiddleware())
    dp.callback_query.middleware(ErrorMiddleware())

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—ã–π —Ä–æ—É—Ç–µ—Ä (–∫–æ—Ç–æ—Ä—ã–π —É–∂–µ –≤–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ä–æ—É—Ç–µ—Ä—ã)
    dp.include_router(router)  # –ì–ª–∞–≤–Ω—ã–π —Ä–æ—É—Ç–µ—Ä –∏–∑ bot/__init__.py —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç admin_update

    logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ GPTTG –±–æ—Ç–∞ –≤–µ—Ä—Å–∏–∏ {VERSION}")

    try:
        await dp.start_polling(bot, allowed_updates=["message", "callback_query"])
    finally:
        await close_session()
        await bot.session.close()


def run_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞."""
    with ensure_single_instance_safe():
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        asyncio.run(main())


if __name__ == "__main__":
    run_bot()
