"""–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞."""

import asyncio
from bot.utils.log import logger
from bot.config import settings

async def show_progress_indicator(bot, chat_id, max_time: int | None = None, interval=2, message="–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å"):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è aiogram 3.x
    
    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ aiogram
        chat_id: ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        max_time: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    """
    indicators = ["‚è≥", "üîÑ", "‚åõ", "ü§î", "üí≠", "üß†"]
    waiting_msg = None
    
    # –ï—Å–ª–∏ max_time –Ω–µ –∑–∞–¥–∞–Ω ‚Äî –≤—ã—á–∏—Å–ª—è–µ–º —É–º–Ω—ã–π –¥–µ—Ñ–æ–ª—Ç: —Ç–∞–π–º–∞—É—Ç OpenAI + 30 —Å–µ–∫ –±—É—Ñ–µ—Ä–∞
    if max_time is None:
        try:
            max_time = int(getattr(settings, "openai_timeout_seconds", 180)) + 30
        except Exception:
            max_time = 210
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        waiting_msg = await bot.send_message(
            chat_id=chat_id, 
            text=f"{message}... ‚è≥"
        )
        
        # –ó–∞—Ç–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
        max_cycles = max(1, max_time // interval)
        for i in range(max_cycles):
            await asyncio.sleep(interval)
            current_indicator = indicators[i % len(indicators)]
            seconds = (i + 1) * interval
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–∑–Ω—ã–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏
            await bot.edit_message_text(
                text=f"{message}... {current_indicator}\n"
                     f"–ü—Ä–æ—à–ª–æ {seconds} —Å–µ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.",
                chat_id=chat_id,
                message_id=waiting_msg.message_id
            )
    except asyncio.CancelledError:
        # –ó–∞–¥–∞—á–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞, –∑–Ω–∞—á–∏—Ç –æ—Ç–≤–µ—Ç –≥–æ—Ç–æ–≤
        if waiting_msg:
            try:
                await bot.delete_message(chat_id=chat_id, message_id=waiting_msg.message_id)
            except asyncio.CancelledError:
                pass
            except Exception:
                pass
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")
        await _safe_delete_message(bot, chat_id, waiting_msg)


async def _safe_delete_message(bot, chat_id, waiting_msg):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º."""
    if waiting_msg:
        try:
            await bot.delete_message(chat_id=chat_id, message_id=waiting_msg.message_id)
        except Exception as e:
            logger.debug(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞: {e}")