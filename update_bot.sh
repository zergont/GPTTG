#!/bin/bash
# –£–ø—Ä–æ—â—ë–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è GPTTG
# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: sudo ./update_bot.sh

set -e

REPO_DIR="/root/GPTTG"
SERVICE_NAME="gpttg-bot"

cd "$REPO_DIR"

echo "=== –ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è GPTTG ==="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if [[ $EUID -ne 0 ]]; then
   echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏ root"
   exit 1
fi

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
echo "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –¥–∞–Ω–Ω—ã—Ö..."
cp .env .env.backup 2>/dev/null || echo "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
cp bot/bot.sqlite bot.sqlite.backup 2>/dev/null || echo "‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
cp last_version.txt last_version.backup 2>/dev/null || echo "‚ö†Ô∏è –§–∞–π–ª –≤–µ—Ä—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω"

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME..."
systemctl stop $SERVICE_NAME || echo "‚ö†Ô∏è –°–µ—Ä–≤–∏—Å —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
echo "üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ Git..."
git fetch origin
git reset --hard origin/beta

# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
mv .env.backup .env 2>/dev/null || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å .env"
mv bot.sqlite.backup bot/bot.sqlite 2>/dev/null || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑—É"
mv last_version.backup last_version.txt 2>/dev/null || echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–µ—Ä—Å–∏—é"

# –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
export PATH="$HOME/.local/bin:$PATH"
if command -v poetry &> /dev/null; then
    poetry install --only=main
else
    echo "‚ö†Ô∏è Poetry –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º pip"
    pip install -r requirements.txt
fi

# –û–±–Ω–æ–≤–ª—è–µ–º systemd —Å–µ—Ä–≤–∏—Å
if [ -f "gpttg-bot.service" ]; then
    echo "‚öôÔ∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
    cp gpttg-bot.service /etc/systemd/system/
    systemctl daemon-reload
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME..."
systemctl start $SERVICE_NAME

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞..."
sleep 5

for i in {1..6}; do
    if systemctl is-active --quiet $SERVICE_NAME; then
        echo "‚úÖ –°–µ—Ä–≤–∏—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
        systemctl status $SERVICE_NAME --no-pager --lines=3
        
        # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ pyproject.toml
        if [ -f "pyproject.toml" ]; then
            VERSION=$(grep '^version' pyproject.toml | head -1 | awk -F '"' '{print $2}')
            echo "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –í–µ—Ä—Å–∏—è: $VERSION"
        fi
        
        echo "=== –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ GPTTG –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ ==="
        exit 0
    fi
    echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $i/6: –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞..."
    sleep 5
done

echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å"
systemctl status $SERVICE_NAME --no-pager
journalctl -u $SERVICE_NAME --no-pager --lines=10
exit 1