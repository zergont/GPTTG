#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–¥–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º .env –∏ –±–∞–∑—ã bot.sqlite
# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: sudo ./update_bot.sh

set -e

REPO_DIR="/root/GPTTG"  # –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –ø—Ä–æ–µ–∫—Ç—É
SERVICE_NAME="gpttg-bot"
GIT_REPO="https://github.com/zergont/GPTTG.git"
ENV_FILE=".env"
ENV_BACKUP=".env.backup"
DB_FILE="bot/bot.sqlite"  # –ò–°–ü–†–ê–í–õ–ï–ù–û: –±–∞–∑–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ bot/
DB_BACKUP="bot.sqlite.backup"
LAST_VERSION_FILE="last_version.txt"
LAST_VERSION_BACKUP="last_version.txt.backup"

cd "$REPO_DIR"

echo "=== –ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è GPTTG ==="

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ —Å—Ä–∞–∑—É
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤..."
mkdir -p /root/GPTTG/logs
echo "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è logs —Å–æ–∑–¥–∞–Ω–∞"

# –°–æ—Ö—Ä–∞–Ω—è–µ–º .env, –±–∞–∑—É –∏ last_version.txt –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
if [ -f "$ENV_FILE" ]; then
    cp "$ENV_FILE" "$ENV_BACKUP"
    echo "‚úÖ –§–∞–π–ª .env —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ .env.backup"
fi
if [ -f "$DB_FILE" ]; then
    cp "$DB_FILE" "$DB_BACKUP"
    echo "‚úÖ –ë–∞–∑–∞ bot.sqlite —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ bot.sqlite.backup"
fi
if [ -f "$LAST_VERSION_FILE" ]; then
    cp "$LAST_VERSION_FILE" "$LAST_VERSION_BACKUP"
    echo "‚úÖ –§–∞–π–ª last_version.txt —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ last_version.txt.backup"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ $SERVICE_NAME..."
systemctl stop $SERVICE_NAME || true

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ git, –Ω–µ —Ç—Ä–æ–≥–∞–µ–º .env, –±–∞–∑—É –∏ .git
echo "üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ Git..."
find . -maxdepth 1 ! -name "$ENV_FILE" ! -name "$ENV_BACKUP" ! -name "$DB_BACKUP" ! -name "$LAST_VERSION_BACKUP" ! -name ".git" ! -name "." ! -name "logs" ! -name "bot" -exec rm -rf {} +
git fetch origin
# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã, –∫—Ä–æ–º–µ .env –∏ –±–∞–∑—ã
git reset --hard origin/beta

echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º .env, –±–∞–∑—É –∏ last_version.txt –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
if [ -f "$ENV_BACKUP" ]; then
    mv "$ENV_BACKUP" "$ENV_FILE"
    echo "‚úÖ .env –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
fi
if [ -f "$DB_BACKUP" ]; then
    mv "$DB_BACKUP" "$DB_FILE"
    echo "‚úÖ bot.sqlite –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
fi
if [ -f "$LAST_VERSION_BACKUP" ]; then
    mv "$LAST_VERSION_BACKUP" "$LAST_VERSION_FILE"
    echo "‚úÖ last_version.txt –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏ python3
if [ ! -f ".venv/bin/python3" ]; then
    echo "üêç –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, —Å–æ–∑–¥–∞—é..."
    python3 -m venv .venv
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ -f "pyproject.toml" ]; then
    echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ poetry..."
    export PATH="$HOME/.local/bin:/usr/local/bin:$PATH"
    if ! command -v poetry &> /dev/null; then
        echo "üìé Poetry –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é –ø–æ–ª–Ω—ã–π –ø—É—Ç—å..."
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π lock file –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        rm -f poetry.lock
        /root/.local/bin/poetry lock
        /root/.local/bin/poetry install
    else
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π lock file –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        rm -f poetry.lock
        poetry lock
        poetry install
    fi
    echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ bot/main.py
if [ ! -f "bot/main.py" ]; then
    echo "‚ùå –§–∞–π–ª bot/main.py –Ω–µ –Ω–∞–π–¥–µ–Ω! –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ."
    exit 1
fi

# –¢–µ—Å—Ç–∏—Ä—É–µ–º, —á—Ç–æ –±–æ—Ç –º–æ–∂–µ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞..."
timeout 15s .venv/bin/python3 -c "
import sys
sys.path.insert(0, '.')
try:
    from bot.config import settings, VERSION
    print(f'‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –≤–µ—Ä—Å–∏—è: {VERSION}')
    print(f'‚úÖ Bot token: {\"‚úì\" if settings.bot_token else \"‚úó\"}')
    print(f'‚úÖ OpenAI API key: {\"‚úì\" if settings.openai_api_key else \"‚úó\"}')
    print(f'‚úÖ Admin ID: {settings.admin_id}')
    print(f'‚úÖ –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {settings.platform} ({\"dev\" if settings.is_development else \"prod\"})')
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}')
    sys.exit(1)
" || {
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞!"
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:"
    .venv/bin/python3 -c "import bot.config" 2>&1 || true
    exit 1
}

# –ö–æ–ø–∏—Ä—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–π unit-—Ñ–∞–π–ª systemd
if [ -f "gpttg-bot.service" ]; then
    echo "‚öôÔ∏è –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ gpttg-bot.service –≤ /etc/systemd/system/"
    cp gpttg-bot.service /etc/systemd/system/gpttg-bot.service
    systemctl daemon-reload
    echo "‚úÖ Systemd –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
fi

# –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –ª–æ–≥–æ–≤ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
mkdir -p /root/GPTTG/logs

# –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –≤–∫–ª—é—á–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
if ! systemctl is-enabled $SERVICE_NAME &> /dev/null; then
    systemctl enable $SERVICE_NAME
    echo "‚úÖ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ –≤–∫–ª—é—á–µ–Ω"
fi

# –°–æ–∑–¥–∞–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞..."
cat > /tmp/restart_bot.sh << 'EOF'
#!/bin/bash
sleep 3
systemctl start gpttg-bot
sleep 5
for i in {1..6}; do
    if systemctl is-active --quiet gpttg-bot; then
        echo "‚úÖ –°–µ—Ä–≤–∏—Å gpttg-bot —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω"
        systemctl status gpttg-bot --no-pager --lines=3
        exit 0
    fi
    echo "‚è≥ –ü–æ–ø—ã—Ç–∫–∞ $i/6: –æ–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
    sleep 5
done
echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å –ø–æ—Å–ª–µ 6 –ø–æ–ø—ã—Ç–æ–∫"
journalctl -u gpttg-bot --no-pager --lines=10
exit 1
EOF

chmod +x /tmp/restart_bot.sh

# –ó–∞–ø—É—Å–∫ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –≤ —Ñ–æ–Ω–µ
echo "üöÄ –ó–∞–ø—É—Å–∫ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞..."
nohup /tmp/restart_bot.sh > /tmp/restart_bot.log 2>&1 &

# –í—ã–≤–æ–¥–∏–º –≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ pyproject.toml
if [ -f "pyproject.toml" ]; then
    VERSION=$(grep '^version' pyproject.toml | head -1 | awk -F '"' '{print $2}')
    echo "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $VERSION"
fi

echo "=== –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ GPTTG –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ ==="
echo "üîÑ –°–µ—Ä–≤–∏—Å –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã"
echo "üìã –õ–æ–≥–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: tail -f /tmp/restart_bot.log"